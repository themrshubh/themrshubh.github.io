{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/exportHelper.js","webpack:///./node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///(webpack)/buildin/global.js"],"names":["Object","defineProperty","exports","value","default","sfc","props","key","val","hasSymbol","Symbol","toStringTag","PolySymbol","name","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","window","isESModule","obj","__esModule","assign","applyToParams","fn","params","newParams","Array","isArray","map","noop","TRAILING_SLASH_RE","removeTrailingSlash","path","replace","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","indexOf","hashPos","slice","length","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","base","toLowerCase","isSameRouteLocation","a","b","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","keys","isSameRouteLocationParamsValue","isEquivalentArray","every","i","to","from","startsWith","fromSegments","split","toSegments","toPosition","segment","position","join","NavigationType","NavigationDirection","normalizeBase","baseEl","document","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","el","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","style","scrollTo","getScrollKey","delta","history","state","scrollPositions","Map","saveScrollPosition","scrollPosition","set","getSavedScrollPosition","scroll","get","delete","createBaseLocation","protocol","host","createCurrentLocation","search","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","forEach","listener","type","pop","direction","forward","back","unknown","pauseListeners","listen","callback","push","teardown","index","splice","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","url","err","console","error","data","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","undefined","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","Error","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","options","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","message","subPattern","parse","match","stringify","avoidDuplicatedSlash","endsWith","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","test","createRouteRecordMatcher","record","parent","parser","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","mergeOptions","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","resolve","paramsFromLocation","filter","k","find","m","parentMatcher","unshift","mergeMetaFields","redirect","beforeEnter","normalizeRecordProps","instances","leaveGuards","Set","updateGuards","enterCallbacks","component","propsObject","reduce","defaults","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","values","v","normalizeQuery","normalizedQuery","useCallbacks","handlers","add","handler","reset","list","guardToPromiseFn","guard","enterCallbackArray","Promise","reject","next","valid","guardReturn","call","guardCall","then","catch","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","e","guardEvent","href","RouterLinkImpl","String","required","Boolean","activeClass","exactActiveClass","custom","ariaCurrentValue","slots","attrs","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","target","preventDefault","outer","inner","innerValue","outerValue","some","propClass","globalClass","defaultClass","RouterViewImpl","inheritAttrs","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","instance","oldInstance","oldName","flush","matchedRoute","ViewComponent","currentName","normalizeSlot","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","ref","slot","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","app","this","config","globalProperties","$router","reactiveRoute","provide","unmountApp","unmount","size","arguments","promise","len","Math","max","recordFrom","recordTo","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","includes","enableTracking","resetTracking","id","allowRecurse","deps","shouldTrack","trackStack","pauseTracking","last","track","depsMap","dep","has","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","run","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","shouldUnwrap","readonly","reactive","method","prototype","args","arr","toRaw","l","apply","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","convert","r","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ObjectRefImpl","_object","_key","toRef","object","ComputedRefImpl","getter","_setter","_dirty","getterOrOptions","setter","callWithErrorHandling","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","nextTick","p","findInsertionIndex","job","jobId","getId","middle","middleJobId","queueJob","pos","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","event","rawArgs","isModelListener","modelArg","modifiersKey","number","trim","handlerName","onceHandler","emitted","normalizeEmitsOptions","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","withProxy","propsOptions","emit","render","renderCache","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","filterModelListeners","cloneVNode","dirs","concat","transition","createVNode","Comment","filterSingleRoot","singleRoot","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","n","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","toString","isSameType","expectedTypes","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","onTrack","onTrigger","cleanup","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","create","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","__isKeepAlive","matches","onActivated","registerKeepAliveHook","onDeactivated","__wdc","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","invokeDirectiveHook","bindings","oldBindings","binding","dir","createAppContext","isNativeTag","performance","optionMergeStrategies","isCustomElement","warnHandler","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","version","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","initFeatureFlags","defineComponent","setup","isAsyncWrapper","__asyncLoader","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","exposed","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","isSVG","getNextHostNode","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","onVnodeMounted","enter","treeOwnerId","__scopeId","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","c","arrI","isTeleport","__isTeleport","disabled","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","registry","blockStack","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","klass","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","flag","createStaticVNode","numberOfNodes","createCommentVNode","asBlock","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","expose","globalMixins","callSyncHook","applyMixins","methodHandler","dataFn","resolveData","enumerable","configurable","createWatcher","callHookFromMixins","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","resolveMergedOptions","__merged","strats","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","displayName","h","propsOrChildren","renderList","renderItem","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","selector","setAttribute","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","className","patchStyle","display","cssText","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","Element","makeMap","str","expectsLowerCase","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","toDisplayString","JSON","replacer","isMap","entries","isSet","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","toNumber","parseFloat","isNaN","g","module"],"mappings":"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","file":"js/chunk-vendors.1c202c1d.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    for (const [key, val] of props) {\n        sfc[key] = val;\n    }\n    return sfc;\n};\n","/*!\n  * vue-router v4.0.4\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    // display the error if any\r\n                    componentPromise = componentPromise.catch(console.error);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    let options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    to.leaveGuards = from.leaveGuards;\r\n                    to.updateGuards = from.updateGuards;\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nfunction getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n\nconst HOOK_SETUP = 'devtools-plugin:setup';\n\nfunction setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'Router' + (id ? ' ' + id : ''),\r\n        label: 'Vue Router',\r\n        app,\r\n    }, api => {\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            // @ts-ignore\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError(error => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    // @ts-ignore\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                },\r\n            });\r\n        });\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    meta: {},\r\n                    data,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    data,\r\n                    // @ts-ignore\r\n                    logType: failure ? 'warning' : 'default',\r\n                    meta: {},\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = String(routeRecordId++);\r\n    record.__vd_id = id;\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        // @ts-ignore\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (let key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-ignore\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.indexOf('?') > -1 ||\r\n                        newTargetLocation.indexOf('#') > -1\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : { path: newTargetLocation };\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            let toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp.call(this, arguments);\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && true) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.indexOf(recordFrom) < 0)\r\n                leavingRecords.push(recordFrom);\r\n            else\r\n                updatingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (from.matched.indexOf(recordTo) < 0)\r\n                enteringRecords.push(recordTo);\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, ref, isProxy, proxyRefs, toRef, reactive, shallowReadonly, track, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (!(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */, [\r\n                    instance && instance.proxy\r\n                ]);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */, [\r\n                instance && instance.proxy\r\n            ]);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getComponentName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode || isAsyncWrapper(vnode)) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.exposed || vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, scopedInitialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            // special self referencing call generated by compiler\r\n            // inferred from SFC filename\r\n            if (name === `_self`) {\r\n                return Component;\r\n            }\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, \r\n    // public API\r\n    expose } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            // @ts-ignore dataOptions is not fully type safe\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            Reflect.ownKeys(provides).forEach(key => {\r\n                provide(key, provides[key]);\r\n            });\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n    if (isArray(expose)) {\r\n        if (!asMixin) {\r\n            if (expose.length) {\r\n                const exposed = instance.exposed || (instance.exposed = proxyRefs({}));\r\n                expose.forEach(key => {\r\n                    exposed[key] = toRef(publicThis, key);\r\n                });\r\n            }\r\n            else if (!instance.exposed) {\r\n                instance.exposed = EMPTY_OBJ;\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`The \\`expose\\` option is ignored when used in mixins.`);\r\n        }\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return i.exposed ? i.exposed : i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance, Component);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = proxyRefs(exposed);\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get props() {\r\n                return instance.props;\r\n            },\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineProps() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmit() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`defineEmit() is a compiler-hint helper that is only usable inside ` +\r\n            `<script setup> of a single file component. Its arguments should be ` +\r\n            `compiled away and passing it at runtime has no effect.`);\r\n    }\r\n    return null;\r\n}\r\nfunction useContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.7\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useContext, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCustomElementCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCustomElementCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const value = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return value;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is only respected when using the runtime compiler.` +\r\n                    `If you are using the runtime-only build, \\`isCustomElement\\` must be passed to \\`@vue/compiler-dom\\` in the build setup instead` +\r\n                    `- for example, via the \\`compilerOptions\\` option in vue-loader: https://vue-loader.vuejs.org/options.html#compileroptions.`);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}